lsof(list open files)是一个列出当前系统打开文件的工具。
在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。
所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，
无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。
因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。

输出信息含义
	在终端下输入lsof即可显示系统打开的文件，
	因为 lsof 需要访问核心内存和各种文件，所以必须以 root 用户的身份运行它才能够充分地发挥其功能。
	直接输入lsof部分输出为:
		COMMAND     PID        USER   FD      TYPE             DEVICE SIZE/OFF       NODE NAME
	    init          1        root  cwd       DIR                8,1     4096          2 /
	    init          1        root  rtd       DIR                8,1     4096          2 /
	    init          1        root  txt       REG                8,1   150584     654127 /sbin/init
	    udevd       415        root    0u      CHR                1,3      0t0       6254 /dev/null
	    udevd       415        root    1u      CHR                1,3      0t0       6254 /dev/null
	    udevd       415        root    2u      CHR                1,3      0t0       6254 /dev/null
	    udevd       690        root  mem       REG                8,1    51736     302589 /lib/x86_64-linux-gnu/libnss_files-2.13.so
	    syslogd    1246      syslog    2w      REG                8,1    10187     245418 /var/log/auth.log
	    syslogd    1246      syslog    3w      REG                8,1    10118     245342 /var/log/syslog
	    dd         1271        root    0r      REG                0,3        0 4026532038 /proc/kmsg
	    dd         1271        root    1w     FIFO               0,15      0t0        409 /run/klogd/kmsg
	    dd         1271        root    2u      CHR                1,3      0t0       6254 /dev/null

	每行显示一个打开的文件，若不指定条件默认将显示所有进程打开的所有文件。
		lsof输出各列信息的意义如下：
		COMMAND：进程的名称 PID：进程标识符
		USER：进程所有者
		FD：文件描述符，应用程序通过文件描述符识别该文件。如cwd、txt等 TYPE：文件类型，如DIR、REG等
		DEVICE：指定磁盘的名称
		SIZE：文件的大小
		NODE：索引节点（文件在磁盘上的标识）
		NAME：打开文件的确切名称

	FD 列中的文件描述符
		cwd 值表示应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改,
		txt 类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序。

		其次数值表示应用程序的文件描述符，这是打开该文件时返回的一个整数。如上的最后一行文件/dev/initctl，其文件描述符为 10。
		u 表示该文件被打开并处于读取/写入模式，而不是只读 ® 或只写 (w) 模式。
		同时还有大写 的W 表示该应用程序具有对整个文件的写锁。
		该文件描述符用于确保每次只能打开一个应用程序实例。
		初始打开每个应用程序时，都具有三个文件描述符，从 0 到 2，分别表示标准输入、输出和错误流。
		所以大多数应用程序所打开的文件的 FD 都是从 3 开始。
	与 FD 列相比，Type 列则比较直观。
		文件和目录分别称为 REG 和 DIR。
		而CHR 和 BLK，分别表示字符和块设备；
		或者 UNIX、FIFO 和 IPv4，分别表示 UNIX 域套接字、先进先出 (FIFO) 队列和网际协议 (IP) 套接字。


